{"ast":null,"code":"var _jsxFileName = \"/home/larks/GoldenRoute/Frontend/src/Components/Input/InputSection.jsx\",\n  _s = $RefreshSig$();\nimport getPlanesFromAPI from './getPlanesFromAPI.js';\nimport InputBox from './TextInput.jsx';\nimport './Input.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputSection = ({\n  URL,\n  setIsPlane,\n  setExpandedIndex,\n  setHostileInfo,\n  hostileInfo,\n  setPlaneData,\n  setHostileBackup,\n  setPlaneBackup\n}) => {\n  _s();\n  // The hostileInputHolder variable is a middle man between the text input boxes and the actual hostile plane's data.\n  const [hostileInfoHolder, setHostileInfoHolder] = useState({\n    Latitude: '',\n    Longitude: '',\n    Radius: '',\n    Speed: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setHostileInfoHolder(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleKeyPress = e => {\n    const allowedKeys = /^[0-9.]$/;\n    if (!allowedKeys.test(e.key)) {\n      e.preventDefault();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"InputSection\",\n    children: [/*#__PURE__*/_jsxDEV(InputBox, {\n      InputName: \"Latitude\",\n      DisplayName: \"קו רוחב\",\n      onChange: handleChange,\n      onKey: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), \",\", /*#__PURE__*/_jsxDEV(InputBox, {\n      InputName: \"Longitude\",\n      DisplayName: \"קו אורך\",\n      onChange: handleChange,\n      onKey: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \",\", /*#__PURE__*/_jsxDEV(InputBox, {\n      InputName: \"Radius\",\n      DisplayName: \"רדיוס טיסה\",\n      onChange: handleChange,\n      onKey: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \",\", /*#__PURE__*/_jsxDEV(InputBox, {\n      InputName: \"Speed\",\n      DisplayName: \"מהירות\",\n      onChange: handleChange,\n      onKey: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), \",\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        // The reason why we pass setIsPlane and setExpandedIndex is for the case that an error would accour so we dont want the app to crash.\n        setHostileInfo();\n        console.log(hostileInfo);\n        getPlanesFromAPI(URL, hostileInfo, setPlaneData, setHostileBackup, setPlaneBackup, setIsPlane, setExpandedIndex);\n      },\n      children: \"\\u05E9\\u05DC\\u05D7 \\u05DE\\u05D9\\u05D3\\u05E2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(InputSection, \"bAkhQbBcGPaSN2DOsjYKPs6v8WE=\");\n_c = InputSection;\nexport default InputSection;\nvar _c;\n$RefreshReg$(_c, \"InputSection\");","map":{"version":3,"names":["getPlanesFromAPI","InputBox","useState","jsxDEV","_jsxDEV","InputSection","URL","setIsPlane","setExpandedIndex","setHostileInfo","hostileInfo","setPlaneData","setHostileBackup","setPlaneBackup","_s","hostileInfoHolder","setHostileInfoHolder","Latitude","Longitude","Radius","Speed","handleChange","e","name","value","target","prevState","handleKeyPress","allowedKeys","test","key","preventDefault","className","children","InputName","DisplayName","onChange","onKey","fileName","_jsxFileName","lineNumber","columnNumber","onClick","console","log","_c","$RefreshReg$"],"sources":["/home/larks/GoldenRoute/Frontend/src/Components/Input/InputSection.jsx"],"sourcesContent":["import getPlanesFromAPI from './getPlanesFromAPI.js'\nimport InputBox from './TextInput.jsx';\nimport './Input.css'\nimport { useState } from 'react';\n\nconst InputSection = ({URL, setIsPlane, setExpandedIndex,setHostileInfo, hostileInfo, setPlaneData, setHostileBackup, setPlaneBackup }) => {\n  \n  // The hostileInputHolder variable is a middle man between the text input boxes and the actual hostile plane's data.\n  const [hostileInfoHolder, setHostileInfoHolder] = useState({\n    Latitude: '',\n    Longitude: '',\n    Radius: '',\n    Speed: ''\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setHostileInfoHolder(prevState => ({\n          ...prevState,\n          [name]: value\n        }));\n  };\n\n  const handleKeyPress = (e) => {\n    const allowedKeys = /^[0-9.]$/;\n    if (!allowedKeys.test(e.key)) {\n      e.preventDefault();\n    }\n  };\n\n  return(\n\n    <div className='InputSection'>\n      <InputBox InputName={\"Latitude\"} DisplayName={\"קו רוחב\"} onChange={handleChange} onKey={handleKeyPress}/>,\n      <InputBox InputName={\"Longitude\"} DisplayName={\"קו אורך\"} onChange={handleChange} onKey={handleKeyPress}/>,\n      <InputBox InputName={\"Radius\"} DisplayName={\"רדיוס טיסה\"} onChange={handleChange} onKey={handleKeyPress}/>,\n      <InputBox InputName={\"Speed\"} DisplayName={\"מהירות\"} onChange={handleChange} onKey={handleKeyPress}/>,\n      <button onClick={() => {\n        // The reason why we pass setIsPlane and setExpandedIndex is for the case that an error would accour so we dont want the app to crash.\n        setHostileInfo()\n        console.log(hostileInfo);\n        getPlanesFromAPI(URL, hostileInfo, setPlaneData, setHostileBackup, setPlaneBackup, setIsPlane, setExpandedIndex);\n      }}>שלח מידע</button>\n    </div>);\n  }\n\nexport default InputSection"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}